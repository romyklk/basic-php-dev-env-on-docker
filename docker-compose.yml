version: '3.8'

services:
  web: 
    build: # permet de construire l'image
      context: ./ # permet de dire où se trouve le dockerfile
      dockerfile: Dockerfile # permet de dire quel est le dockerfile
    container_name: webserver # permet de donner un nom au container
    ports: # permet de faire le lien entre le port du container et le port de la machine
      - 9000:80 # port de la machine : port du container
    volumes: # permet de faire le lien entre le dossier de la machine et le dossier du container
      - /Applications/MAMP/htdocs/LEARNING/Docker/php-env:/var/www/html
    environment: # permet de définir les variables d'environnement
      - APACHE_DOCUMENT_ROOT=/var/www/html/public
    restart: always # permet de relancer le container s'il crash

  db: # permet de créer un container pour la base de données
    image: mysql:latest # permet de définir l'image à utiliser
    container_name: database # permet de donner un nom au container
    environment: # permet de définir les variables d'environnement
      - MYSQL_DATABASE=${DB_DATABASE} # permet de définir le nom de la base de données
      - MYSQL_USER=${DB_USERNAME} # permet de définir le nom de l'utilisateur
      - MYSQL_PASSWORD=${DB_PASSWORD} # permet de définir le mot de passe de l'utilisateur
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes # permet de définir si le mot de passe peut être vide
    volumes: # permet de faire le lien entre le dossier de la machine et le dossier du container
      - my_mysql_data:/var/lib/mysql 
    ports:
      - 3306:3306
    depends_on: # permet de définir les dépendances entre les containers (ici, le container db doit être lancé avant le container web)
      - web
    restart: always # permet de relancer le container s'il crash

  phpmyadmin: # permet de créer un container pour phpmyadmin
    image: phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_HOST=${DB_HOST} # permet de définir le nom de l'hôte (ici, le container db) sur lequel phpmyadmin va se connecter
      - PMA_PORT=3306 # permet de définir le port sur lequel phpmyadmin va se connecter
    ports:
      - 9001:80
    depends_on:
      - db
    restart: always

volumes: # permet de créer un volume pour la base de données afin de ne pas perdre les données si le container est supprimé
    my_mysql_data:  # nom du volume à créer
